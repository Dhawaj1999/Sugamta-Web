@model Sugamta.Web.Models.PrimaryClientDTOs.PrimaryClientDetailsEditDto
@{
    var PrimaryClientEmail = ViewData["PrimaryClientEmail"];
}

@* <div id="profilePopup" class="modal fade profileform">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content pl-4 pr-4"> *@
<!-- Popup content goes here -->
<form asp-controller="PrimaryClient" asp-action="AddOrUpdatePrimaryClientDetails" method="post" enctype="multipart/form-data">
    <div class="modal-header">
        <h5 class="modal-title">Primary Client Details</h5>
        <button type="button" class="close" style="color: red;" data-dismiss="modal" onclick="closeModalPrimaryClient()">&times;</button>
    </div>
    <div class="row">
        <div class="modal-body col-9">
            <!-- Your profile content goes here -->
            @* <div class="form-floating mb-2">
                <label for="floatingInput">Email</label>
                <input id="emailInput" asp-for="PrimaryClientEmail" disabled type="email" class="form-control input-sm" id="floatingInput" placeholder="examp@gmail.com" >

            </div> *@

            <div class="form-floating mb-2">
                <label for="floatingInput">Email</label>

                @if (Model == null)
                {
                    <!-- Display the email value, but disable the input -->
                    <input id="emailInput" asp-for="PrimaryClientEmail" disabled value="@PrimaryClientEmail" type="email" class="form-control input-sm" id="floatingInput" mailto:placeholder="examp@gmail.com">

                    <!-- Hidden input to store the email value for submission -->
                    <input type="hidden" asp-for="PrimaryClientEmail" value="@PrimaryClientEmail" />
                }
                else
                {
                    <!-- Display the email value as a disabled input -->
                    <input id="emailInput" asp-for="PrimaryClientEmail" disabled type="email" class="form-control input-sm" id="floatingInput" mailto:placeholder="examp@gmail.com">

                    <!-- Hidden input to store the email value for submission -->
                    <input type="hidden" asp-for="PrimaryClientEmail" />
                }
            </div>
             

            @* <div class="form-floating mb-2">
                <label for="floatingInput">Email</label>
                <!-- Display the email value, but disable the input -->
                <input id="emailInput" asp-for="PrimaryClientEmail" disabled type="email" class="form-control input-sm" id="floatingInput" placeholder="examp@gmail.com">

                <!-- Hidden input to store the email value for submission -->
                <input type="hidden" asp-for="PrimaryClientEmail" />
            </div> *@


            <div class="form-floating mb-2">
                <label for="floatingInput">Address</label>
                <input id="addressInput" asp-for="Address" type="text" class="form-control input-sm" id="floatingInput" placeholder="name">
            </div>
            <div class="form-floating mb-2">
                <label for="floatingInput">City</label>
                <input id="cityInput" asp-for="City" type="text" class="form-control input-sm" id="floatingInput" placeholder="name">
            </div>

            <div class="form-floating mb-3">
                <label for="stateInputPrimaryClient">State</label>
                <div style="display: flex;">
                    <input id="" style="width: 32%;" asp-for="State" type="text" class="form-control input-sm" id="floatingInput" placeholder="state">
                    <select id="stateInputPrimaryClient" asp-for="StateId" class="form-control form-select form-select-sm" aria-label="small select example" style="width: 33%;">
                        @* <option selected></option> *@
                        @foreach (var state in ViewBag.StateList as List<State> ?? new List<State>())
                        {
                            <option value="@state.StateId">@state.StateName</option>
                        }
                    </select>
                </div>
           
            </div>
            <div class="form-floating mb-3">
                <label for="countryInputPrimaryClient">Country</label>
                <div style="display: flex;">
                    <input id="" style="width: 32%;" asp-for="Country" type="text" class="form-control input-sm" id="floatingInput" placeholder="country">
                    <select id="countryInputPrimaryClient" asp-for="CountryId" class="form-control form-select form-select-sm" aria-label="small select example" style="width: 33%; z-index: 1000;">
                        @* <option>--Select Country--</option> *@
                        @foreach (var country in ViewBag.CountryList as List<Country> ?? new List<Country>())
                        {
                            <option selected value="@country.CountryId">@country.CountryName</option>
                        }
                    </select>
                </div>              
            </div>

            <div class="form-floating mb-2">
                <label for="floatingInput">Phone Number</label>
                <input id="phoneInput" asp-for="PhoneNumber" type="number" class="form-control input-sm" id="floatingInput" placeholder="12345">

            </div>
            <div class="form-floating mb-2">
                <label for="floatingInput">Alternate PhoneNo</label>
                <input id="alternatePhoneInput" asp-for="AlternatePhoneNumber" type="number" class="form-control input-sm" id="floatingInput" placeholder="123..">

            </div>

            <div class="form-floating mb-2">
                <label>Profile Picture:</label>
                <div class="input-group" style="width: 92%;">
                    <input type="file" id="formFile1" class="form-control" asp-for="formFile" onchange="previewImage1(this)">
                </div>
            </div>

            <button type="submit" class="btn btn-lg btn-primary btn-login text-uppercase mb-2" style="padding: 6px 18px 5px 18px;
                        margin-top: 8px;
                        font-size: 15px;
                        font-family: sans-serif;
                        font-weight: lighter;">
                Save
            </button>
            <button class="btn btn-lg btn-outline-dark text-uppercase mb-2" type="button" style="padding: 6px 18px 5px 18px;
                        margin-top: 8px;
                        font-size: 15px;
                        font-family: sans-serif;
                        font-weight: lighter;" onclick="closeModalPrimaryClient()">
                Cancel
            </button>
        </div>

        <div class="col-3" style="position: relative;">
            <img asp-formaction="" class="primaryClientImage" id="imagePreview1" width="100%" style="margin-top: 20px; height: 160px; border: solid;" />

            @if (Model != null && Model.ImageUrl != null)
            {
                <input type="hidden" id="previousImageUrl1" src="@Model.ImageUrl" />
            }

            <button type="button" class="btn btn-custom"
                    onclick="discardImage1()">
                <i class="fas fa-trash-alt" style="color:brown;"></i>
            </button>
        </div>


    </div>
</form>
@*         </div>
    </div>
</div> *@


<script src="~/js/PrimaryClientDetails.js"></script>
<script>
    var primaryClientEmail = '@Html.Raw(PrimaryClientEmail)';

    function displayImageForPrimaryClient() {
        $.ajax({
            url: '/PrimaryClient/GetPrimaryClientImage',
            type: 'GET',
            data: { email: primaryClientEmail },
            success: function (data) {
                //debugger;
                $('.primaryClientImage').attr('src', 'data:image/png;base64,' + data);
                updateNavProfileImage(data);
    @*  $('#navProfileImage').attr('src', 'data:image/png;base64,' + data); *@
                    },
            error: function (error) {
                console.error('Failed to retrieve and display image:', error);
            }
        });
    }

    document.addEventListener('DOMContentLoaded', function () {
    // Retrieve the previous image URL from the hidden field
    var previousImageUrl = document.getElementById('previousImageUrl1').value;
    var imagePreview = document.getElementById('imagePreview1');

    // Check if there is a previous image URL
    if (previousImageUrl) {
        imagePreview.src = previousImageUrl;
        imagePreview.style.display = 'block';
    }
    });

    function previewImage1(input) {
    var preview = document.getElementById('imagePreview1');
    var file = input.files[0];

    if (file) {
        var reader = new FileReader();

        reader.onload = function (e) {
            preview.src = e.target.result;
            preview.style.display = 'block';
        };

        reader.readAsDataURL(file);
    } else {
        preview.src = '';
        preview.style.display = 'none';
    }
}
    function discardImage1() {
        var fileInput = document.getElementById('formFile1');
        fileInput.value = ''; // Clear the file input
        var imagePreview = document.getElementById('imagePreview1');
        imagePreview.src = ''; // Clear the preview
        imagePreview.style.display = 'block';
    }

    function closeModalPrimaryClient() {
        // Assuming you're using jQuery for Bootstrap modal
        $('#primaryClientEditModal').modal('hide');
    }

    function GetCountryListForPrimaryClient() {
        $.ajax({
            url: '/Home/GetCountry',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                console.log(data);
                try {
                    var countryDropdown = $('#countryInputPrimaryClient');
                    countryDropdown.empty(); // Clear existing options

                    // Add a default option
                    countryDropdown.append($('<option>', {
                        value: '',
                        text: '--Change Country--'
                    }));

                    // Populate dropdown with country options
                    data.forEach(function (country) {
                        countryDropdown.append($('<option>', {
                            value: country.countryId,
                            text: country.countryName
                        }));
                    });
                } catch (error) {
                    console.error('Error populating country dropdown:', error);
                }
            },
            error: function (error) {
                console.log('Error fetching country data:', error);
                // Handle the error
            }
        });
    }

    function GetStateListForPrimaryClient() {
        $.ajax({
            url: '/Home/GetState', // Update the URL as needed
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                console.log(data);
                try {
                    var stateDropdown = $('#stateInputPrimaryClient');
                    stateDropdown.empty(); // Clear existing options

                    // Add a default option
                    stateDropdown.append($('<option>', {
                        value: '',
                        text: '--Change State--'
                    }));

                    // Populate dropdown with state options
                    data.forEach(function (state) {
                        stateDropdown.append($('<option>', {
                            value: state.stateId,
                            text: state.stateName
                        }));
                    });
                } catch (error) {
                    console.error('Error populating state dropdown:', error);
                }
            },
            error: function (error) {
                console.log('Error fetching state data:', error);
                // Handle the error
            }
        });
    }

    function displayImageForPrimaryClient() {
        $.ajax({
            url: '/PrimaryClient/GetPrimaryClientImage',
            type: 'GET',
            data: { email: primaryClientEmail },
            success: function (data) {
                //debugger;
                $('.primaryClientImage').attr('src', 'data:image/png;base64,' + data);
                updateNavProfileImage(data);
    @*  $('#navProfileImage').attr('src', 'data:image/png;base64,' + data); *@
                },
            error: function (error) {
                console.error('Failed to retrieve and display image:', error);
            }
        });
    }

</script>